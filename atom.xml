<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hong Xin</title>
  
  <subtitle>大肉丸</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-13T15:17:53.325Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建hadoop伪分布式平台</title>
    <link href="http://yoursite.com/posts/b9efe76c/"/>
    <id>http://yoursite.com/posts/b9efe76c/</id>
    <published>2018-01-13T07:32:08.000Z</published>
    <updated>2018-01-13T15:17:53.325Z</updated>
    
    <content type="html"><![CDATA[<p>###本机环境<br>Ubuntu 16.04<br>hadoop版本 2.7.3</p><h3 id="新建hadoop用户-其实也可以不用"><a href="#新建hadoop用户-其实也可以不用" class="headerlink" title="新建hadoop用户   (其实也可以不用)"></a>新建hadoop用户   (其实也可以不用)</h3><p>参考教程：<a href="https://www.shiyanlou.com/courses/35/labs/135/document" target="_blank" rel="noopener">https://www.shiyanlou.com/courses/35/labs/135/document</a><br>xiehongxinhadoop</p><p><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-13/596778a2e4925.PNG" alt=""></p><p> <img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-13/596778b79e949.PNG" alt=""></p><p>Ubuntu 安装配置SSH(ssh: connect to host localhost port 22: Connection refused问题的解决)<br><a href="http://www.linuxidc.com/Linux/2015-01/112045.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2015-01/112045.htm</a></p><h3 id="配置ssh免登录"><a href="#配置ssh免登录" class="headerlink" title="配置ssh免登录"></a>配置ssh免登录</h3><p>…</p><h3 id="hadoop安装"><a href="#hadoop安装" class="headerlink" title="hadoop安装"></a>hadoop安装</h3><blockquote><p><strong>解压到 /usr/local 目录：</strong>    sudo tar -xzvf …./hadoop-2.7.3.tar.gz -C /usr/local<br><strong>将解压后的文件夹重命名为hadoop:</strong>     sudo mv hadoop-2.7.3 hadoop<br>&ensp;<br>（如果新建hadoop用户，要将hadoop文件夹的所有者改为hadoop ：sudo chown -R hadoop ./hadoop  【第一个hadoop代表hadoop用户，第二个./hadoop 代表hadoop这个文件夹】）</p></blockquote><p>###配置环境变量<br><strong>编辑配置文件</strong>  sudo vim /etc/profile  或者 sudo nano /etc/profile</p><p><strong>添加如下内容</strong><br>#hadoop (//应改为#)<br>export HADOOP_HOME=/usr/local/hadoop<br>export PATH=$PATH:$HADOOP_HOME/bin<br>export PATH=$PATH:$HADOOP_HOME/sbin<br>export HADOOP_MAPRED_HOME=$HADOOP_HOME<br>export HADOOP_COMMON_HOME=$HADOOP_HOME<br>export HADOOP_HDFS_HOME=$HADOOP_HOME</p><p>#hadoop data direcotory<br>export YARN_HOME=$HADOOP_HOME<br>export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</p><p><strong>使配置文件生效</strong><br>source /etc/profile</p><p><strong>修改hadoop配置文件</strong><br>进入相应的路径 cd /usr/local/hadoop/etc/hadoop</p><p>对要修改的文件进行备份<br>sudo cp core-site.xml core-site.xml.bak<br>sudo cp hdfs-site.xml hdfs-site.xml.bak<br>sudo cp yarn-site.xml yarn-site.xml.bak<br>sudo cp hadoop-env.sh hadoop-env.sh.bak<br>对：sudo cp mapred-site.xml.template mapred-site.xml.template.bak<br> 错：sudo cp mapred-site.xml.template mapred-site.xml(就是这里埋下了祸根)</p><p><strong>配置文件说明</strong><br>hadoop-env.sh: 记录脚本中要用到的环境变量，以运行hadoop<br>core-site.xml: HDFS和mapreduce的IO设置<br>hdfs-site.xml: hadoop守护进程配置，namenode，辅助namemode和datanode<br>mapred-site.xml: mapreduce守护进程配置<br>yarn-site.xml :Yarn资源管理器配置</p><p><strong>修改hadoop-env.sh</strong><br>export JAVA_HOME=你的java路径</p><p><strong>修改core-site.xml </strong><br>在<configuration></configuration>增加hdfs的端口信息,增加的内容如下：</p><pre><code>&lt;property&gt;   &lt;name&gt;fs.defaultFS&lt;/name&gt;   &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;&lt;/property&gt; &lt;property&gt;&lt;!-- 设置每个节点临时文件目录 --&gt;   &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; &lt;!-- 当前用户须要对此目录有读写权限，启动集群时自动创建 --&gt;  &lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt;  &lt;!-- 防止运行mapreduce任务时配置被修改 --&gt;   &lt;final&gt;true&lt;/final&gt;&lt;/property&gt;</code></pre><p><strong>修改hdfs-site.xml</strong><br>在<configuration></configuration>增加以下内容：</p><pre><code>&lt;property&gt;&lt;!-- 设置数据的备份数为1--&gt;  &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt;  &lt;!-- 这两个文件夹不用自己创建--&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt; &lt;/property&gt;</code></pre><p><strong>配置完成后，执行 NameNode 的格式化:</strong><br><code>./bin/hdfs namenode -format</code></p><p><strong>开启 NameNode 和 DataNode 守护进程</strong><br><code>./sbin/start-dfs.sh</code></p><p>（成功启动后，可以访问 Web 界面 <a href="http://localhost:50070" target="_blank" rel="noopener">http://localhost:50070</a> 查看 NameNode 和 Datanode 信息）</p><p><strong>运行Hadoop伪分布式实例</strong><br>from：<a href="http://www.powerxing.com/install-hadoop/" target="_blank" rel="noopener">http://www.powerxing.com/install-hadoop/</a><br>./bin/hdfs dfs -mkdir -p /user/hadoop<br>./bin/hdfs dfs -mkdir input<br>./bin/hdfs dfs -put ./etc/hadoop/<em>.xml input<br>./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-</em>.jar grep input output ‘dfs[a-z.]+’<br>./bin/hdfs dfs -cat output/*</p><p>后面步骤按照上面的教程</p><p>###测试</p><p>1.查看守护进程是否全部启动    jps<br>hadoop全部守护进程启动应该有5个，如下：<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-17/596c3b4fa8b1c.png" alt=""></p><p>2.打开浏览器输入<a href="http://127.0.0.1:8088" target="_blank" rel="noopener">http://127.0.0.1:8088</a>    和 <a href="http://127.0.0.1:50070" target="_blank" rel="noopener">http://127.0.0.1:50070</a>  能显示hadoop界面</p><p>###后话：<br>搭建时遇到的错误：<br>1.格式化namenode时无法在home创建tmp文件夹：<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-17/596c3d48d2a0f.png" alt=""><br>解决办法如下：<br>创建tmp目录： <img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-17/596c3e9299218.png" alt=""><br>授权： sudo chmod -R a+w /home/tmp</p><p>2.格式化namenode时<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-07-17/596c3f045ed9d.png" alt=""><br>进入bin目录 格式化NameNode和启动守护进程</p><p>转载<br><a href="http://www.jianshu.com/p/ca10f2d5b879" target="_blank" rel="noopener">http://www.jianshu.com/p/ca10f2d5b879</a><br><a href="http://www.powerxing.com/install-hadoop/" target="_blank" rel="noopener">http://www.powerxing.com/install-hadoop/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###本机环境&lt;br&gt;Ubuntu 16.04&lt;br&gt;hadoop版本 2.7.3&lt;/p&gt;
&lt;h3 id=&quot;新建hadoop用户-其实也可以不用&quot;&gt;&lt;a href=&quot;#新建hadoop用户-其实也可以不用&quot; class=&quot;headerlink&quot; title=&quot;新建hadoo
      
    
    </summary>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Hadoop" scheme="http://yoursite.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>在服务器后台运行Python程序</title>
    <link href="http://yoursite.com/posts/d2553b91/"/>
    <id>http://yoursite.com/posts/d2553b91/</id>
    <published>2018-01-13T07:30:55.000Z</published>
    <updated>2018-01-13T07:33:13.584Z</updated>
    
    <content type="html"><![CDATA[<p>方式一：nohup 命令</p><p>该命令会在后台执行 main.py 这个程序，并将输出结果保存到 nohup.out 文件</p><blockquote><p>nohup python main.py &amp;</p></blockquote><p>将输出结果更改到 filename.out 文件。</p><blockquote><p>nohup python main.py &gt;filename.out 2&gt;&amp;1 &amp; </p></blockquote><p>查看后台运行的任务</p><blockquote><p>jobs </p></blockquote><p>nohup命令解释<br><a href="https://www.cnblogs.com/zq-inlook/p/3577003.html" target="_blank" rel="noopener">https://www.cnblogs.com/zq-inlook/p/3577003.html</a></p><p>方式二：<br><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方式一：nohup 命令&lt;/p&gt;
&lt;p&gt;该命令会在后台执行 main.py 这个程序，并将输出结果保存到 nohup.out 文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nohup python main.py &amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将输出
      
    
    </summary>
    
      <category term="Liunx" scheme="http://yoursite.com/categories/Liunx/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装virtualbox</title>
    <link href="http://yoursite.com/posts/704f0bbb/"/>
    <id>http://yoursite.com/posts/704f0bbb/</id>
    <published>2018-01-13T07:29:51.000Z</published>
    <updated>2018-01-13T07:33:13.583Z</updated>
    
    <content type="html"><![CDATA[<p>1.virtualbox版本：virtualbox-5.1_5.1.4-110228-Ubuntu-xenial_amd64.deb</p><p>2.virtualbox安装文档地址：<a href="https://www.virtualbox.org/manual/UserManual.html" target="_blank" rel="noopener">https://www.virtualbox.org/manual/UserManual.html</a></p><p>3.安装<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-20/59996545b2a2b.png" alt=""></p><p>4.报错：vboxdrv 构建失败<br>vboxdrv介绍：为了在主操作系统旁边的虚拟机中运行其他操作系统，VirtualBox需要非常紧密地集成到系统中。要做到这一点，它会安装一个名为“驱动程序”的模块vboxdrv，该模块在系统内核中进行大量工作，这是控制处理器和物理硬件的操作系统的一部分。没有这个内核模块，你仍然可以使用VirtualBox管理器来配置虚拟机，但是它们不会启动。它还安装了调用的网络驱动程序 vboxnetflt， vboxnetadp哪些虚拟机可以更好地利用计算机的网络功能，而且超出基本“NAT”模式的虚拟机网络需要。</p><p>在执行 sudo dpkg -i virtualbox-5.1_5.1.4-110228-Ubuntu-xenial_amd64.deb<br>这条命令时，安装程序将尝试构建适合当前运行的内核的内核模块。如果构建过程不成功，您将看到一个警告，该包将被取消配置</p><p>解决步骤：（不要盲目执行本教程代码，建议阅读全文后再考虑如何执行）<br>1.查看有没有安装正确的头文件<br>查看内核版本：<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-20/5999696c4fd2b.png" alt=""></p><p>对于Debian和基于Ubuntu的发行版，您必须安装 linux-headers，通常取的linux-headers-generic ，linux-headers-amd64 ，linux-headers-i686 或linux-headers-i686-pae 这些头文件的正确版，版本名最好与内核版本名称相匹配; </p><p>头文件一般放在/usr/src 目录下<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-20/59996aeedfd4a.png" alt=""><br>如图，该头文件已正确安装（我是自动安装的），如果相应的头文件没安装，可参考下面的教程：<br><a href="https://linux.cn/article-4625-1.html#3_1245" target="_blank" rel="noopener">https://linux.cn/article-4625-1.html#3_1245</a></p><p>2.查看/var/log/vbox-install.log为什么编译失败<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-21/599af3cbdf74a.png" alt=""></p><p>通过Google和百度，网上大部分资料都指向“内核没编译”，但是因为对内核不熟，所以没敢尝试，也建议不要随便编译内核，以下是我查找的资料<br>报错解决办法：<br><a href="http://hanjiangduqiao.blog.163.com/blog/static/613105442012320558430/" target="_blank" rel="noopener">http://hanjiangduqiao.blog.163.com/blog/static/613105442012320558430/</a><br><a href="http://blog.csdn.net/chenbang110/article/details/7795011" target="_blank" rel="noopener">http://blog.csdn.net/chenbang110/article/details/7795011</a> （就是这个教程说内核没编译）<br><a href="http://www.linuxdiyf.com/viewarticle.php?id=314763" target="_blank" rel="noopener">http://www.linuxdiyf.com/viewarticle.php?id=314763</a> (这个教程说要进入 /usr/src/kernels/linux-3.6.2 目录，但是我发现我电脑并没有kernels这个目录，所以没尝试)</p><p>内核编译：<br><a href="https://kernelnewbies.org/FAQ/KernelCompilation" target="_blank" rel="noopener">https://kernelnewbies.org/FAQ/KernelCompilation</a><br><a href="http://www.linuxprobe.com/linux-kernel-compilation.html" target="_blank" rel="noopener">http://www.linuxprobe.com/linux-kernel-compilation.html</a><br><a href="http://www.cnblogs.com/super119/archive/2011/01/03/1924408.html" target="_blank" rel="noopener">http://www.cnblogs.com/super119/archive/2011/01/03/1924408.html</a><br>看起来比较有用的<br><a href="http://forum.ubuntu.org.cn/viewtopic.php?t=42690" target="_blank" rel="noopener">http://forum.ubuntu.org.cn/viewtopic.php?t=42690</a></p><p>3.安装Qt 5.3.2以上（推荐Qt 5.6.2以上）和 SDL 1.2.7或更高版本（此图形库通常称为 libsdl或类似）<br>突然在官网教程发现要安装这两个包，但是我并没有，这个对系统影响较小，所以先试试这个。<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-21/599b000bb68de.png" alt=""></p><p>查看qt版本：qmake -v<br>但有时候安装完成执行此命令还是报错<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-21/599afdf2b46dd.png" alt=""><br>解决办法：<a href="http://blog.csdn.net/zhuquan945/article/details/52818786" target="_blank" rel="noopener">http://blog.csdn.net/zhuquan945/article/details/52818786</a></p><p>qt5.7安装教程<br><a href="https://qtguide.ustclug.org/ch01-04.htm" target="_blank" rel="noopener">https://qtguide.ustclug.org/ch01-04.htm</a><br><a href="http://blog.csdn.net/u012235003/article/details/71195046" target="_blank" rel="noopener">http://blog.csdn.net/u012235003/article/details/71195046</a> （我用这个安装）</p><blockquote><p>下载包：<br>wget <a href="http://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run" target="_blank" rel="noopener">http://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run</a><br>下载后给执行权限:  chmod +x qtxxxx.run<br>安装 :       ./qtxxxx.run<br>安装g++:   sudo apt-get install build-essential<br>安装依赖库: sudo apt-get install libfontconfig1<br>安装OpenGL: sudo apt-get install mesa-common-dev<br>以及依赖: sudo apt-get install libglu1-mesa-dev -y<br>配置:  打开qt creator 工具-&gt;选项-&gt;构建&amp;运行-&gt;编译，选择编译器</p></blockquote><p>SDL安装<br>SDL1.0安装：<a href="http://www.linuxidc.com/Linux/2010-07/26965.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2010-07/26965.htm</a><br>SDL2.0安装：<a href="http://wiki.libsdl.org/Installation" target="_blank" rel="noopener">http://wiki.libsdl.org/Installation</a></p><p>痛心：安装qt5和SDL后还是报错<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-21/599b006c28aeb.png" alt=""></p><p>4.重新Google报错原因<br><a href="http://blog.csdn.net/jingtiangao/article/details/51811638" target="_blank" rel="noopener">http://blog.csdn.net/jingtiangao/article/details/51811638</a><br><a href="https://askubuntu.com/questions/762254/why-do-i-get-required-key-not-available-when-install-3rd-party-kernel-modules" target="_blank" rel="noopener">https://askubuntu.com/questions/762254/why-do-i-get-required-key-not-available-when-install-3rd-party-kernel-modules</a>  （这一篇的第二个答案（点赞量14）之前试过，曾经能启动，但后来又不行了）</p><p>根本原因：从内核版本4.4.0-20开始，如果启用了UEFI Secure Boot，强制执行未启用安全启动的未签名内核模块将不允许运行<br>解决办法：在BIOS里面关闭安全启动在执行 sudo rcvboxdrv setup 重新编译<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2017-08-22/599b08c599be4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.virtualbox版本：virtualbox-5.1_5.1.4-110228-Ubuntu-xenial_amd64.deb&lt;/p&gt;
&lt;p&gt;2.virtualbox安装文档地址：&lt;a href=&quot;https://www.virtualbox.org/manual/U
      
    
    </summary>
    
      <category term="Liunx" scheme="http://yoursite.com/categories/Liunx/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github+Next-搭建个人博客2</title>
    <link href="http://yoursite.com/posts/7879e99d/"/>
    <id>http://yoursite.com/posts/7879e99d/</id>
    <published>2018-01-13T07:27:15.000Z</published>
    <updated>2018-01-13T15:23:10.820Z</updated>
    
    <content type="html"><![CDATA[<p>本文是上一篇文章 “ Hexo+Github+Next 搭建个人博客(一)”的延续，主要讲述自己在配置 Next 主题时遇到的一些问题，是已经假设你已经搭好环境的情况下，如果对环境搭建还有不懂的地方，请看上一篇文章哦。</p><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a><br><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/index.html</a></p><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><h5 id="1-添加栏目"><a href="#1-添加栏目" class="headerlink" title="1.添加栏目"></a>1.添加栏目</h5><p>如下图， 在添加栏目时需定义路径和图标，图标既可在 menu 这里定义 (符号|| 后面就是图标的名称 )也可以在 menu_icons 定义。该图标是到 <a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">http://fontawesome.io/icons/</a> 这个网站找的。<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-13/5a599561675f8.png" alt=""></p><h5 id="2-添加社交链接"><a href="#2-添加社交链接" class="headerlink" title="2.添加社交链接"></a>2.添加社交链接</h5><p>一般情况下在 Next 的配置文件是不会定义中文字体的，中文字体都是定义在 /languages/zh-Hans.yml 文件下，但是我在 /languages/zh-Hans.yml  定义后，还是不会显示“简书”，“知乎”的中文，最后是直接在 配置文件 定义才行，如下图。</p><p><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-13/5a5998ab9c0d6.png" alt=""></p><p>一般情况下，配置到这里，整个博客的样子也应该出来了，但问题总是有的。</p><h5 id="3-点击-”关于“-显示-”Cannot-GET-about-“"><a href="#3-点击-”关于“-显示-”Cannot-GET-about-“" class="headerlink" title="3.点击 ”关于“ 显示 ”Cannot GET /about/“"></a>3.点击 ”关于“ 显示 ”Cannot GET /about/“</h5><p>这是因为你没有新建页面（page）的缘故，需键入下面命令，键入后在source文件夹下会对应生成 “about” 文件夹 和 index.md 文件，index.md 便是你显示的页面了。之后你便可以肆无忌惮的写文章了。</p><blockquote><p>hexo new page about</p></blockquote><h5 id="4-显示分类的效果，如下图"><a href="#4-显示分类的效果，如下图" class="headerlink" title="4.显示分类的效果，如下图"></a>4.显示分类的效果，如下图</h5><p><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-13/5a59a09655dee.png" alt=""></p><p>该效果需要以下三个步骤：</p><blockquote><p># 1.新建页面<br>hexo new page categories<br>&ensp;<br> # 2.添加 type 和 comments<br>-–<br>title: 分类<br>date: 2018-01-13 11:12:25<br>type: “categories”<br>comments: false<br>-–<br>&ensp;<br>3.在文章添加标签<br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-13/5a59a047dfc42.png" alt=""></p></blockquote><h5 id="5-文章链接唯一化等进阶教程"><a href="#5-文章链接唯一化等进阶教程" class="headerlink" title="5.文章链接唯一化等进阶教程"></a>5.文章链接唯一化等进阶教程</h5><p><a href="http://muyunyun.cn/posts/f55182c5/#more" target="_blank" rel="noopener">hexo 摸爬滚打之进阶教程</a><br><a href="http://blog.ynxiu.com/2016/hexo-next-theme-optimize.html" target="_blank" rel="noopener">Hexo+NexT主题配置备忘</a></p><h5 id="6-部署-Hexo-时设置免密码，节省时间"><a href="#6-部署-Hexo-时设置免密码，节省时间" class="headerlink" title="6.部署 Hexo 时设置免密码，节省时间"></a>6.部署 Hexo 时设置免密码，节省时间</h5><p><a href="https://segmentfault.com/a/1190000005125610" target="_blank" rel="noopener">设置 SSH 使用 hexo deploy 时免输用户名密码</a></p><h5 id="7-安装-HexoEditor"><a href="#7-安装-HexoEditor" class="headerlink" title="7.安装 HexoEditor"></a>7.安装 HexoEditor</h5><p>官方地址：<a href="https://github.com/zhuzhuyule/HexoEditor/blob/master/doc/en/Building.md" target="_blank" rel="noopener">https://github.com/zhuzhuyule/HexoEditor/blob/master/doc/en/Building.md</a><br>淘宝镜像： <a href="https://npm.taobao.org/" target="_blank" rel="noopener">https://npm.taobao.org/</a></p><blockquote><p># If In China China China, you can set mirror to speed up !<br>npm config set registry “<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a>“<br>npm config set electron_mirror “<a href="https://npm.taobao.org/mirrors/electron/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/electron/</a>“</p><p># 克隆项目<br>git clone <a href="https://github.com/zhuzhuyule/HexoEditor.git" target="_blank" rel="noopener">https://github.com/zhuzhuyule/HexoEditor.git</a></p><p># 使用淘宝定制cnpm， 用npm下载总会出错<br>sudo npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>cd HexoEditor<br>sudo cnpm install<br>sudo cnpm start</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文是上一篇文章 “ Hexo+Github+Next 搭建个人博客(一)”的延续，主要讲述自己在配置 Next 主题时遇到的一些问题，是已经假设你已经搭好环境的情况下，如果对环境搭建还有不懂的地方，请看上一篇文章哦。&lt;/p&gt;
&lt;h4 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Hexo，Next，博客" scheme="http://yoursite.com/tags/Hexo%EF%BC%8CNext%EF%BC%8C%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github+Next-搭建个人博客1</title>
    <link href="http://yoursite.com/posts/e170b827/"/>
    <id>http://yoursite.com/posts/e170b827/</id>
    <published>2018-01-13T07:27:07.000Z</published>
    <updated>2018-01-13T15:17:07.536Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>Centos7</p><h4 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h4><p> <a href="https://mritd.me/2015/12/31/Github-%E6%90%AD%E5%BB%BA-Hexo-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Github 搭建 Hexo 静态博客</a></p><p>上面的教程采用的是  Hexo + Github + Yilia 主题，但本人在采用 Yilia 主题出现了一点问题，所以最后采用的是 Next 主题。以下是自己遇到的一些问题及解决办法</p><p>&ensp;</p><h4 id="Hexo-框架"><a href="#Hexo-框架" class="headerlink" title="Hexo 框架"></a>Hexo 框架</h4><p><strong>1.在/etc/profle 配置了node.js 的路径，用“sudo npm install …” 提示 “sudo npm  找不到命令“</strong></p><p>原因：当 sudo以管理权限执行命令的时候，Linux将PATH环境变量进行了重置，当然这主要是因为系统安全的考虑,所以会找不到该路径。</p><p>解决办法（路径要更改为自己的）：</p><blockquote><p>sudo ln -s /usr/local/node-v8.9.3/bin/node /usr/bin/node<br>sudo ln -s /usr/local/node-v8.9.3/lib/node_modules /usr/lib/node<br>sudo ln -s /usr/local/node-v8.9.3/bin/npm /usr/bin/npm</p></blockquote><p>参考： <a href="https://www.cnblogs.com/ishell/p/4333763.html" target="_blank" rel="noopener">https://www.cnblogs.com/ishell/p/4333763.html</a></p><p><strong>2.让 hexo server 后台运行</strong><br><a href="http://www.tuijiankan.com/2015/05/08/hexo-forever-run/" target="_blank" rel="noopener">http://www.tuijiankan.com/2015/05/08/hexo-forever-run/</a></p><p>&ensp;</p><h4 id="yilia主题"><a href="#yilia主题" class="headerlink" title="yilia主题"></a>yilia主题</h4><p>1 采用 yilia 主题的博客<br><a href="http://litten.me/" target="_blank" rel="noopener">http://litten.me/</a><br><a href="http://zbk1nger.github.io/" target="_blank" rel="noopener">http://zbk1nger.github.io/</a></p><p><strong>2 采用 yilia 主题时图片的路径问题</strong></p><p><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-08/5a52fd433701e.png" alt=""></p><p>如图，我在 yilia 的配置文件分别配置了三张图片：支付宝、微信的收款码和个人头像。上图的 /img 文件夹 注意是要放在 根目录下的 source 文件夹下，再通过以下这三条命令生成便可预览。</p><blockquote><p>hexo clean   # 清除缓存<br>hexo g       # 生成静态文件<br>hexo s       # 启动服务器预览</p></blockquote><p><strong>3 yilia 主题发布的文章 在主页显示时 文章的内容 会全部显示，个人觉得那样很长很难看，所以想要部分展示的效果，类似于这样</strong><br><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-08/5a5344eb4d699.png" alt=""></p><p>解决办法：在文章需要截断的位置加上 more 标签，如下图</p><p><img src="http://hdoc.scau.edu.cn/Public/Uploads/2018-01-08/5a534580a826c.png" alt=""></p><p>但是添加标签后出现了上图的效果，与“展开全文”重复，而且也不好看，本人没学过前端，故最后切换成 Next 主题。</p><p>&ensp;</p><h4 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h4><p>Next 主题的配置见本人的下一篇博客 “Hexo+Github+Next 搭建个人博客(一)”。</p><p>&ensp;</p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>搭建个人博客，你需要知道这些<br><a href="https://zhuanlan.zhihu.com/p/25744686" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25744686</a></p><p>好看的 Hexo 主题<br><a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;p&gt;Centos7&lt;/p&gt;
&lt;h4 id=&quot;参考教程&quot;&gt;&lt;a href=&quot;#参考教程&quot; class=&quot;headerlink&quot; title=&quot;参考
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Hexo，Next，博客" scheme="http://yoursite.com/tags/Hexo%EF%BC%8CNext%EF%BC%8C%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
